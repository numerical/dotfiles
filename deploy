#!/bin/bash

dotfiles=$PWD

die() {
  echo >&2 "$1" && exit 1
}

link() {
  [[ -z $2 ]] && target=".${1##*/}" \
              || target="${2:-$target}"

  [[ -e "$target" && ! -h "$target" ]] && die "$0: $target exists in filesystem"
  [[ -d "$target"                   ]] && rm "$target"

  ln -fs "$dotfiles/$1" "$target"
}

# Deploy scriptlets {{{1
dotfiles_cower()       { link cower .config/cower;                             }
dotfiles_dircolors()   { link dircolors/dircolors;                             }
dotfiles_fontconfig()  { link fontconfig .config/fontconfig;                   }
dotfiles_git()         { link git/gitconfig;                                   }
#dotfiles_gtk2()        { link gtk-2.0/gtkrc-2.0;                               }
#dotfiles_gtk3()        { link gtk-3.0 .config/gtk-3.0;                         }
dotfiles_haskell()     { link haskell/haskeline;                               }
dotfiles_htop()        { link htop/htoprc;                                     }
#dotfiles_lxdm()        { link lxdm/dmrc;                                       }
#dotfiles_ncmpcpp()     { link ncmpcpp;                                         }
#dotfiles_mutt()        { link mutt;                                            }
#dotfiles_pam()         { link pam/pam_environment;                             }
#dotfiles_ranger()      { link ranger .config/ranger;                           }
#dotfiles_mpd()         { link mpd/mpd.conf .config/mpd.conf;                   }
dotfiles_systemd()     { link systemd .config/systemd;                         }
dotfiles_termite()     { link termite .config/termite;                         }
dotfiles_tmux()        { link tmux/tmux.conf;                                  }
#dotfiles_user-dirs()   { link user-dirs/user-dirs.dirs .config/user-dirs.dirs; }
dotfiles_vimperator()  { link vimperator/vimperatorrc;                         }
dotfiles_weechat()     { link weechat;                                         }
#dotfiles_xmonad()      { link xmonad;                                          }
dotfiles_flake8()         { link flake8 .config/flake8;                        }

#dotfiles_shell() {
#  link shell/zshrc
#  link shell/zprofile
#  link shell/profile
#}

dotfiles_shell() {
  link prezto .zprezto

  link prezto/runcoms/zlogin
  link prezto/runcoms/zlogout
  link prezto/runcoms/zprofile
  link prezto/runcoms/zshenv
  link shell/zshrc
  link shell/zpreztorc
}

#dotfiles_task() {
#  link task/task
#  link task/taskrc
#}

dotfiles_vim() {
  link vim
  link vim/vimrc
  link vim/gvimrc
}

dotfiles_X() {
  link X/Xresources
  link X/xinitrc
}
# }}}

usage() {
  cat << HERE
Automated deploy function for dotfile syncronization.

SUPPORTED:
HERE

  for fn in $(compgen -A function dotfiles_); do
    echo "  ${fn#dotfiles_}"
  done
  exit ${1:-0}
}

deploy() {
  while (( $# )); do
    cd && dotfiles_${1#dotfiles_}
    if [[ $? == 127 ]]; then
      echo  >&2 "Error: don't know how to deploy \"$1\""
      usage >&2 1
    fi
    shift
  done
}

if (( $# == 0 )); then
  deploy $(compgen -A function dotfiles_)
elif [[ "$1" == "--help" ]]; then
  usage 0
else
  deploy $*
fi
